{"version":3,"sources":["alljavascript.js","app.js","controller.js","customers/controller.js","customers/service.js","main/controller.js"],"names":["angular","module","config","$routeProvider","$locationProvider","html5Mode","hashPrefix","when","templateUrl","controller","otherwise","redirectTo","$scope","pageData","Name","directiveTest","$route","$modal","customersService","activePage","readCustomersData","createNewCustomers","modalData","then","result","reload","push","data","readCustomers","id","cb","readAllCustomers","updateCustomers","currentID","index","currentIndex","deleteCustomers","splice","checkData","modalMode","showCustomers","type","myOtherModal","scope","template","show","$promise","console","log","factory","$http","$q","x","defer","method","url","contentType","dataType","resolve","reject","promise","obj","name","address","email","phone"],"mappings":"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","file":"alljavascript.min.js","sourcesContent":["'use strict';\n\n(function () {\n    angular.module(\"MainApp\", ['ngRoute', 'ngSanitize', 'ngResource', 'ngAnimate', 'mgcrea.ngStrap', 'ngMessages']);\n    angular.module(\"MainApp\").config(function ($routeProvider, $locationProvider) {\n        $locationProvider.html5Mode(false).hashPrefix('!');\n        $routeProvider.when(\"/\", {\n            templateUrl: '/views/index.html', controller: 'mainCtrl'\n        }).when(\"/customers\", {\n            templateUrl: '/views/customers/customers.html', controller: 'customersCtrl'\n        }).otherwise({\n            redirectTo: \"/\"\n        });\n    });\n})();\n\n// var token = \"XXX\";\n// (function() {\n\n// })();\n(function () {\n    angular.module(\"MainApp\").controller(\"globalCtrl\", function ($scope) {\n        $scope.pageData = [{ Name: 'Home' }, { Name: 'Customers' }];\n        $scope.directiveTest = \"YO YO Mgular\";\n    });\n})();\n(function () {\n    angular.module(\"MainApp\").controller('customersCtrl', function ($scope, $route, $modal, customersService) {\n        $scope.activePage = 2; //\"Customers\";\n        $scope.readCustomersData = [];\n\n        $scope.createNewCustomers = function () {\n            customersService.createNewCustomers($scope.modalData).then(function (result) {\n                if (result) {\n                    $route.reload();\n                    $scope.readCustomersData.push(result.data);\n                }\n            });\n        };\n        $scope.modalData = {};\n        $scope.readCustomers = function (id, cb) {\n            customersService.readCustomers(id).then(function (result) {\n                cb(result.data);\n            });\n        };\n        $scope.readAllCustomers = function () {\n            customersService.readAllCustomers().then(function (result) {\n                if (result != null) {\n                    $scope.readCustomersData = result.data;\n                }\n            });\n        };\n        $scope.updateCustomers = function () {\n            var id = $scope.currentID;\n            var index = $scope.currentIndex;\n            customersService.updateCustomers($scope.modalData, id).then(function (result) {\n                if (result) {\n                    $route.reload();\n                    $scope.readCustomersData[index] = $scope.modalData;\n                }\n            });\n        };\n\n        $scope.deleteCustomers = function (id) {\n            var index = $scope.currentIndex;\n            customersService.deleteCustomers(id).then(function (result) {\n                if (result) {\n                    $route.reload();\n                    $scope.readCustomersData.splice(index, 1);\n                }\n            });\n        };\n\n        $scope.checkData = function () {\n            switch ($scope.modalMode) {\n                case \"create\":\n                    $scope.createNewCustomers();\n                    break;\n                case \"edit\":\n                    $scope.updateCustomers();\n                    break;\n            }\n        };\n        $scope.showCustomers = function (type, id, index) {\n            $scope.modalMode = type;\n            $scope.currentID = id;\n            $scope.currentIndex = index;\n            var myOtherModal = $modal({ scope: $scope, template: '/views/customers/modal/customersModal.html', show: false });\n\n            switch (type) {\n                case 'create':\n                    $scope.modalData = {};\n                    myOtherModal.$promise.then(myOtherModal.show);\n\n                    break;\n                case 'edit':\n                    $scope.readCustomers(id, function (result) {\n                        console.log(result);\n                        if (result != \"ERROR\") {\n                            myOtherModal.$promise.then(myOtherModal.show);\n                            $scope.modalData = result[0];\n                        }\n                    });\n                    break;\n            }\n        };\n    });\n})();\n(function () {\n    angular.module(\"MainApp\").factory('customersService', function ($http, $q) {\n        var x = {};\n        x.readAllCustomers = function () {\n            var defer = $q.defer();\n            $http({\n                method: 'GET',\n                url: '/customers',\n                contentType: 'application/json; charset=utf-8',\n                dataType: 'json'\n            }).then(function (result) {\n                defer.resolve(result);\n                console.log('Can Read All Customers.');\n            }).catch(function (result) {\n                defer.reject(result);\n                console.log('Cannot Read Customers.');\n            });\n            return defer.promise;\n        };\n\n        x.readCustomers = function (id) {\n            console.log(id);\n            var defer = $q.defer();\n            $http({\n                method: 'GET',\n                url: '/customers/edit/' + id,\n                contentType: 'application/json; charset=utf-8',\n                dataType: 'json'\n            }).then(function (data) {\n                defer.resolve(data);\n                console.log('Can get data from DB.');\n            }).catch(function (data) {\n                defer.reject(data);\n                console.log('Cannot get data from DB.');\n            });\n            return defer.promise;\n        };\n\n        x.createNewCustomers = function (obj) {\n            console.log(obj.name);\n            var defer = $q.defer();\n            $http({\n                method: \"POST\",\n                url: '/customers/saveadd',\n                contentType: 'application/json; charset=utf-8',\n                data: {\n                    name: obj.name,\n                    address: obj.address,\n                    email: obj.email,\n                    phone: obj.phone\n                },\n                dataType: 'json'\n            }).then(function (data) {\n                defer.resolve(data);\n                console.log('User Created.');\n            }).catch(function (data) {\n                defer.reject(data);\n                console.log('User Cannot Create.');\n            });\n            return defer.promise;\n        };\n\n        x.updateCustomers = function (obj, id) {\n            var defer = $q.defer();\n            $http({\n                method: \"POST\",\n                url: '/customers/save_edit/' + id,\n                data: {\n                    name: obj.name,\n                    address: obj.address,\n                    email: obj.email,\n                    phone: obj.phone\n                },\n                contentType: 'application/json; charset=utf-8',\n                dataType: 'json'\n            }).then(function (data) {\n                defer.resolve(data);\n                console.log('User Updated.');\n            }).catch(function (data) {\n                defer.reject(data);\n                console.log(data);\n                console.log('User Cannot Update.');\n            });\n            return defer.promise;\n        };\n\n        x.deleteCustomers = function (id) {\n            console.log(id);\n            var defer = $q.defer();\n            $http({\n                method: 'GET',\n                url: '/customers/delete_customer/' + id,\n                contentType: 'application/json; charset=utf-8',\n                dataType: 'json'\n            }).then(function (data) {\n                defer.resolve(data);\n                console.log('Deleted.');\n            }).catch(function (data) {\n                defer.reject(data);\n                console.log('Cannot Delete');\n            });\n            return defer.promise;\n        };\n        return x;\n    });\n})();\n\n(function () {\n    angular.module(\"MainApp\").controller('mainCtrl', function ($scope) {\n        $scope.activePage = 1; // Home     \n    });\n})();","(function() {\r\nangular.module(\"MainApp\", ['ngRoute', 'ngSanitize', 'ngResource', 'ngAnimate', 'mgcrea.ngStrap', 'ngMessages'])\r\nangular.module(\"MainApp\").config(function ($routeProvider, $locationProvider) {\r\n    $locationProvider.html5Mode(false).hashPrefix('!');\r\n    $routeProvider\r\n        .when(\"/\", {\r\n            templateUrl: '/views/index.html', controller: 'mainCtrl'\r\n        })\r\n        .when(\"/customers\", {\r\n            templateUrl: '/views/customers/customers.html', controller: 'customersCtrl'\r\n        }).otherwise({\r\n            redirectTo: \"/\"\r\n        });\r\n});\r\n})();\r\n\r\n\r\n\r\n\r\n","   (function(){\r\n    angular.module(\"MainApp\").controller(\"globalCtrl\", function ($scope) {\r\n        $scope.pageData = [\r\n            {Name: 'Home'},\r\n            {Name: 'Customers'}\r\n        ];\r\n        $scope.directiveTest = \"YO YO Mgular\";\r\n    });\r\n   })();","(function () {\r\n    angular.module(\"MainApp\").controller('customersCtrl', function ($scope, $route, $modal, customersService) {\r\n        $scope.activePage = 2; //\"Customers\";\r\n        $scope.readCustomersData = [];\r\n\r\n        $scope.createNewCustomers = (() => {\r\n            customersService.createNewCustomers($scope.modalData).then((result) => {\r\n                if (result) {\r\n                    $route.reload();\r\n                    $scope.readCustomersData.push(result.data);\r\n                }\r\n            });\r\n        });\r\n        $scope.modalData = {};\r\n        $scope.readCustomers = ((id, cb) => {\r\n            customersService.readCustomers(id).then((result) => {\r\n                cb(result.data);\r\n            });\r\n        });\r\n        $scope.readAllCustomers = (() => {\r\n            customersService.readAllCustomers().then((result) => {\r\n                if (result != null) {\r\n                    $scope.readCustomersData = result.data;\r\n                }\r\n            });\r\n        });\r\n        $scope.updateCustomers = (() => {\r\n            var id = $scope.currentID;\r\n            var index = $scope.currentIndex;\r\n            customersService.updateCustomers($scope.modalData, id).then((result) => {\r\n                if (result) {\r\n                    $route.reload();\r\n                    $scope.readCustomersData[index] = $scope.modalData;\r\n                }\r\n            });\r\n        });\r\n\r\n        $scope.deleteCustomers = ((id) => {\r\n            var index = $scope.currentIndex;\r\n            customersService.deleteCustomers(id).then((result) => {\r\n                if (result) {\r\n                    $route.reload();\r\n                    $scope.readCustomersData.splice(index, 1);\r\n                }\r\n            });\r\n        });\r\n\r\n        $scope.checkData = (() => {\r\n            switch ($scope.modalMode) {\r\n                case \"create\":\r\n                    $scope.createNewCustomers();\r\n                    break;\r\n                case \"edit\":\r\n                    $scope.updateCustomers();\r\n                    break;\r\n            }\r\n        });\r\n        $scope.showCustomers = ((type, id, index) => {\r\n            $scope.modalMode = type;\r\n            $scope.currentID = id;\r\n            $scope.currentIndex = index;\r\n            var myOtherModal = $modal({ scope: $scope, template: '/views/customers/modal/customersModal.html', show: false });\r\n\r\n            switch (type) {\r\n                case 'create':\r\n                    $scope.modalData = {};\r\n                    myOtherModal.$promise.then(myOtherModal.show);\r\n\r\n                    break;\r\n                case 'edit':\r\n                    $scope.readCustomers(id, ((result) => {\r\n                        console.log(result);                   \r\n                        if (result != \"ERROR\") {\r\n                            myOtherModal.$promise.then(myOtherModal.show);\r\n                            $scope.modalData = result[0];\r\n                        }\r\n                    }));\r\n                    break;\r\n            }\r\n        });\r\n\r\n    });\r\n})();","(function () {\r\n    angular.module(\"MainApp\").factory('customersService', ($http, $q) => {\r\n        var x = {};\r\n        x.readAllCustomers = () => {\r\n            var defer = $q.defer();\r\n            $http(\r\n                {\r\n                    method: 'GET',\r\n                    url: '/customers',\r\n                    contentType: 'application/json; charset=utf-8',\r\n                    dataType: 'json'\r\n                })\r\n                .then((result) => {\r\n                    defer.resolve(result);\r\n                    console.log('Can Read All Customers.');\r\n                }).catch((result) => {\r\n                    defer.reject(result);\r\n                    console.log('Cannot Read Customers.');\r\n                });\r\n            return defer.promise;\r\n        };\r\n\r\n        x.readCustomers = ((id) => {\r\n            console.log(id);\r\n            var defer = $q.defer();\r\n            $http({\r\n                method: 'GET',\r\n                url: '/customers/edit/' + id,\r\n                contentType: 'application/json; charset=utf-8',\r\n                dataType: 'json'\r\n            }).then((data) => {\r\n                defer.resolve(data);\r\n                console.log('Can get data from DB.');\r\n            }).catch((data) => {\r\n                defer.reject(data);\r\n                console.log('Cannot get data from DB.');\r\n            });\r\n            return defer.promise;\r\n        });\r\n\r\n        x.createNewCustomers = ((obj) => {\r\n            console.log(obj.name);\r\n            var defer = $q.defer();\r\n            $http({\r\n                method: \"POST\",\r\n                url: '/customers/saveadd',\r\n                contentType: 'application/json; charset=utf-8',\r\n                data: {\r\n                    name: obj.name,\r\n                    address: obj.address,\r\n                    email: obj.email,\r\n                    phone: obj.phone\r\n                },\r\n                dataType: 'json'\r\n            }).then((data) => {\r\n                defer.resolve(data);\r\n                console.log('User Created.');\r\n            }).catch((data) => {\r\n                defer.reject(data);\r\n                console.log('User Cannot Create.');\r\n            });\r\n            return defer.promise;\r\n        });\r\n\r\n        x.updateCustomers = ((obj, id) => {\r\n            var defer = $q.defer();\r\n            $http({\r\n                method: \"POST\",\r\n                url: '/customers/save_edit/' + id,\r\n                data: {\r\n                    name: obj.name,\r\n                    address: obj.address,\r\n                    email: obj.email,\r\n                    phone: obj.phone\r\n                },\r\n                contentType: 'application/json; charset=utf-8',\r\n                dataType: 'json'\r\n            }).then((data) => {\r\n                defer.resolve(data);\r\n                console.log('User Updated.');\r\n            }).catch((data) => {\r\n                defer.reject(data);\r\n                console.log(data);\r\n                console.log('User Cannot Update.');\r\n            });\r\n            return defer.promise;\r\n        });\r\n\r\n        x.deleteCustomers = ((id) => {\r\n            console.log(id);\r\n            var defer = $q.defer();\r\n            $http({\r\n                method: 'GET',\r\n                url: '/customers/delete_customer/' + id,\r\n                contentType: 'application/json; charset=utf-8',\r\n                dataType: 'json'\r\n            }).then((data) => {\r\n                defer.resolve(data);\r\n                console.log('Deleted.');\r\n            }).catch((data) => {\r\n                defer.reject(data);\r\n                console.log('Cannot Delete');\r\n            });\r\n            return defer.promise;\r\n        });\r\n        return x;\r\n    });\r\n})();\r\n\r\n","(function(){\r\n    angular.module(\"MainApp\").controller('mainCtrl', function ($scope) {\r\n        $scope.activePage = 1; // Home     \r\n    });\r\n})();\r\n"]}